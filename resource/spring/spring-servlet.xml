<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"  
       xmlns:util="http://www.springframework.org/schema/util"  
       xmlns:websocket="http://www.springframework.org/schema/websocket"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd  
                        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd  
                        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd  
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"
       default-autowire="byName">
       
       	<!-- 启动注解驱动 -->
       	<mvc:annotation-driven /> 
       	<!-- 扫描注解包（在SpringMVC的容器里，只扫描Controller注解就可以）
       		use-default-filters默认为true，默认会扫描@Component、@Controller、@Repository、@Service的注解，
       		在这里只扫描@Controller注解是因为，SpringMVC的容器没有事务的能力，
       		所以扫描@Repository、@Service的注解只能放在Spring的容器。也正因为如此，事务的配置要写在Spring的容器。
       	 -->
		<context:component-scan base-package="com.mvc.rest" use-default-filters="false">  
       		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		</context:component-scan> 
		<context:component-scan base-package="com.core.shiro" use-default-filters="false">  
       		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		</context:component-scan> 
		
        <!-- 对模型视图名称的解析 -->
        <bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver"  p:prefix="/WEB-INF/view/" p:suffix=".jsp" />
		<!-- 配置login视图解析，在登录拦截器里，校验未登录的话，要跳转到登录页面，
			然后由于login页面放在WEB-INF目录下，所以设置跳转到login.jsp会跳转不过去，
			在此处设置如下，在返回此view-name的地方，容器便不会当作Controller的路径，
			当作视图的路径跳转，在拦截器里便可以跳转到login页面（此配置告诉容器，这不是一个controller的方法的路径，而是一个视图的名称，请当作视图处理）。 -->
		<mvc:view-controller path="/" view-name="login" /> 
		
		<!-- 配置CommonsMultpartResolver，上传文件的时候要用到CommonsMultpartResolver，maxUploadSize设置上传文件的大小限制，上传文件必须先配置此解析器。 -->
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
     		<property name="maxUploadSize" value="10485760" />  
		</bean>
		
		<!-- 配置拦截器, 多个拦截器,顺序执行  -->  
        <mvc:interceptors>  
        	<mvc:interceptor>  
            	<mvc:mapping path="/*" />  
           		<bean class="com.mvc.rest.interceptor.CommonInterceptor"></bean>   
     		</mvc:interceptor> 
     	</mvc:interceptors> 
		 
		    
</beans>



